Doubly Link List History File (Carl J. Nobile)

*** Begin CVS Information ***
$Author$
$Date$
$Revision$
*** End CVS Information ***

Ver 2.0.0 --

(1)  Removed the dll_dbg.h and the dll_main.h headers. They are all in
     the linklist.h header now.

(2)  Made all the tabs in the source files into hard spaces. This was a
     bad habit of mine since I use to set my tabs equal to the equivalent
     of 3 spaces.

(3)  Removed all but the UNIX Makefile since this version will use
     pthreads. Sorry, but if someone wants to contribute a thread safe
     version for Mac or Windows let me know. This should be fairly easy
     since I call macros in the source code.

(4)  In order to make this library thread safe I needed to make two private
     functions: _addRecord and _deleteEntireList. These are called by other
     functions in the library and as such need to be atomic. If I didn't do
     this a deadlock situation would occur. The locks are in the functions:
     DLL_DeleteEntireList, DLL_AddRecord, and in other functions that call
     the private functions.

(5)  A new enumerated return value (DLL_THR_ERROR) has been added to
     DLL_Return to indicate when an error has occurred in a thread create,
     destroy, or read/write lock.

(6)  The return value for DLL_DestroyList has changed from void to
     DLL_Return to permit an error when a destroy read/write lock fails.

(7)  A new function was added, thanks to Wai-Sun Chia. When making this
     API thread safe Wai-Sun found that deleting a node was a two step
     process. One had to make a call to DLL_FindRecord and then to
     DLL_DeleteCurrentRecord this two step operation; whoever, would play
     havoc with a threaded application. The second call might come after the
     current pointer had changed by a different thread causing the wrong
     node to be deleted. I have added his function, DLL_DeleteRecord almost
     verbatim.

(8)  Fixed Makefile so that the package would compile on a SunOS 5.6 box.
     This version of the SunOS does not have read/write locks so I used my
     implimentation.

(9)  Fixed bug I put in when I changes get() to fget() in the dll_test.c file.

Ver 1.1.0 -- July 05, 1999

(1)  Added four new functions DLL_GetCurrentIndex(), DLL_InsertRecord(),
     DLL_SwapRecord(), and DLL_FindNthRecord()--read the docs on how to
     use these functions.  The basic idea for these functions came from
     Graham Inchley.

(2)  Updated the dll_test program so it could test the new functions.

(3)  Fixed a bug in DLL_AddRecord() where if the Node malloc failed it
     wouldn't free the previous Info malloc-ed structure.

(4)  Re-wrote DLL_AddRecord() so it would execute faster in some
     situations. You probably will never notice anything but it was
     easy to do and made the code simpler.

(5)  Removed some redundant statements from DLL_FindRecord().

(6)  Fixed the sym-links to the library and created a script (demo.sh)
     to run dll_test using the libraries just built instead of defaulting
     to a pre-installed version.

(7)  Re-wrote DLL_GetSearchModes() so it is now thread safe.  This will
     break some code, see the docs. NOTE: This library is not yet
     threaded.

(8)  The documentation source is now in LaTeX2e.  It is converted into a
     postscript file and html pages.

(8)  The Makefile has been completely worked over (still not using GNU
     config) with installs and uninstalls for everything.

Ver 1.0.3 -- November 04, 1998

(1) The package is now covered by the Artistic License, see the
    README and Artistic files.

(2) Minor (non-programic) changes to dll_test.c

(3) Added a README file with notice of the new License.

(4) Re-wrote the MSC6.0 Makefile

Ver 1.0.2 -- October 18, 1998

NOTE: The following changes were only made to the Linux Makefile.

(1) Changed Makefile to incorporate Mac compile options--changes
    contributed by Charlie Buckheit.

(2) Added -fomit-frame-pointer in non-debugging compilation modes.

(3) I now delete the old shared library from the install path before
    copying the new one.

Ver 1.0.1 -- June 08, 1998 -- Minor bug fix

(1) DLL_DestroyList() will now exit gracefully if passed a pointer to a 
    NULL pointer.  This condition was never trapped in version 1.0.

(2) Version numbers now include a second decimal point.

(3) Added this history file.

Ver 1.0 -- January 08, 1998 -- Initial release of version in the Linux
                               Journal.
